name: Python 3.8, Node.js 16, Go 1.17, allure

on:
  push:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags'
        required: false
      network:
        description: 'Network (devnet, testnet, internal.testnet, neonswap.live, aws, ropsten, rinkeby)'
        required: true
        default: 'devnet'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

  python:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/allure-prep
      - uses: ./.github/actions/switch-network
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          # python -m pip install --upgrade pip
          pip install pipenv
          pipenv sync
          # pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pipenv run flake8 src
          pipenv run flake8 tests
      - name: Test with pytest
        if: always()
        run: |
          pwd
          # pipenv run pytest --alluredir=report/allure-results
          pipenv run behave -f allure_behave.formatter:AllureFormatter -o report/allure-results ./features --no-capture --no-capture-stderr

      - name: Look at Allure
        if: always()
        uses: ./.github/actions/allure-show

      # TODO: de-duplicate
      - name: Archive Allure results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: allure-results
          path: report/allure-results

  node-cucumber:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/allure-prep
      - uses: ./.github/actions/switch-network
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        if: always()
        with:
          node-version: 16.x
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test:cucumber
      # - run: find -name '*.test.js' | while read test ; do echo $test ; npm test $test ; done

      - name: Look at Allure
        if: always()
        uses: ./.github/actions/allure-show

      # TODO: de-duplicate
      - name: Archive Allure results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: allure-results
          path: report/allure-results

  node-nightwatch:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/allure-prep
      - uses: ./.github/actions/switch-network
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        if: always()
        with:
          node-version: 16.x
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run nw:ci
      # - run: find -name '*.test.js' | while read test ; do echo $test ; npm test $test ; done

      - name: Look at Allure
        if: always()
        uses: ./.github/actions/allure-show

      # TODO: de-duplicate
      - name: Archive Allure results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: allure-results
          path: report/allure-results

  golang:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/allure-prep
      - uses: ./.github/actions/switch-network
      - name: Set up Go
        uses: actions/setup-go@v2
        if: always()
        with:
          go-version: 1.17

      - name: Build
        if: always()
        run: |
          echo "go mod download"
          go mod download
          echo "go install"
          go install
          GCO_ENABLED=0
          go mod vendor
          go build -v ./...

      - name: Test
        if: always()
        run: |
          export ALLURE_RESULTS_PATH=/home/runner/work/neon-e2e/neon-e2e/report
          go test -v ./...

      - name: Look at Allure
        if: always()
        uses: ./.github/actions/allure-show

      # TODO: de-duplicate
      - name: Archive Allure results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: allure-results
          path: report/allure-results

  allure:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - python
      - node-cucumber
      - node-nightwatch
      - golang
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report with history
        uses: simple-elf/allure-report-action@v1.5
        if: always()

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 50

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
